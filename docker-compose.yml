services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  keycloak:
    image: quay.io/keycloak/keycloak:22.0.0
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_VAULT_URL: http://vault:8201
      KC_VAULT_TOKEN: ${VAULT_TOKEN:-root}
      KC_CLIENT_SECRETS_PATH: secret/data/keycloak/client-secrets
    command: start-dev
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - vault
    networks:
      - app-network
    restart: unless-stopped

  vault:
    image: hashicorp/vault:1.14
    container_name: vault
    cap_add:
      - IPC_LOCK
    ports:
      - "8201:8201"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8201
    command: server -dev -dev-listen-address=0.0.0.0:8201
    volumes:
      - vault_data:/vault/data
    networks:
      - app-network
    restart: unless-stopped

  client-secret-rotation:
    image: alpine:latest
    container_name: client-secret-rotation
    volumes:
      - ./scripts:/scripts
      - client_rotation_logs:/var/log/keycloak-rotation
    depends_on:
      - vault
      - keycloak
    environment:
      - VAULT_ADDR=http://vault:8201
      - VAULT_TOKEN=root
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - REALM=fresh-realm
      - CLIENT_ID=fresh-client
      - USE_VAULT=true
    networks:
      - app-network
    entrypoint: /bin/sh
    command: >
      -c "apk add --no-cache curl openssl bash coreutils jq util-linux dcron &&
          mkdir -p /etc/cron.d &&
          mkdir -p /var/log &&
          touch /var/log/cron.log &&
          chmod +x /scripts/*.sh &&
          echo 'Running auto-initialization script...' &&
          /scripts/auto-initialize.sh daemon"
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  vault_data:
  client_rotation_logs: 